//*******************************************************************************************************************************************
//
// ダイナマイトアリーナ(misobon.h)
// Author : Kasai Keisuke
//
//*******************************************************************************************************************************************

// include
#include "misobon.h"
#include "bullet.h"

//*******************************************************************************************************************************************
// コンストラクタ
//*******************************************************************************************************************************************
CMisobon::CMisobon(int nPriority):CObjectX(nPriority)
{
	m_nType = 0;				// 種類
	m_bMoveHorizon = true;		// 敵の移動方向(X軸)
	m_bMoveVertical = false;	// 敵の移動方向(Z軸)
	m_nAttackInterval = 0;		// 敵の攻撃間隔
}

//*******************************************************************************************************************************************
// デストラクタ
//*******************************************************************************************************************************************
CMisobon::~CMisobon()
{
	m_nType = 0;				// 種類
	m_bMoveHorizon = true;		// 敵の移動方向(X軸)
	m_bMoveVertical = false;	// 敵の移動方向(Z軸)
	m_nAttackInterval = 0;		// 敵の攻撃間隔
}

//*******************************************************************************************************************************************
// 初期化処理
//*******************************************************************************************************************************************
HRESULT CMisobon::Init()
{
	// Xファイルオブジェクトの初期化処理
	CObjectX::Init();

	return S_OK;
}

//*******************************************************************************************************************************************
// 終了処理
//*******************************************************************************************************************************************
void CMisobon::Uninit()
{
	// Xファイルオブジェクトの終了処理
	CObjectX::Uninit();

	// モデルの破棄
	Release();
}

//*******************************************************************************************************************************************
// 更新処理
//*******************************************************************************************************************************************
void CMisobon::Update()
{
	// Xファイルオブジェクトの更新処理
	CObjectX::Update();

	// 移動処理
	Move();

	// 攻撃処理
	Attack();
}

//*******************************************************************************************************************************************
// 描画処理
//*******************************************************************************************************************************************
void CMisobon::Draw()
{
	// Xファイルオブジェクトの描画処理
	CObjectX::Draw();
}

//*******************************************************************************************************************************************
// 生成処理
//*******************************************************************************************************************************************
CMisobon* CMisobon::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, int nType)
{
	CMisobon* pMisobon = new CMisobon();

	pMisobon->Init();				// 初期化処理

	pMisobon->SetPos(pos);			// 位置設定

	pMisobon->SetRot(rot);			// 向き設定

	pMisobon->BindFileName("data\\MODEL\\ENEMY\\enemy001.x");

	pMisobon->SetModelSize();

	pMisobon->SetScale(D3DXVECTOR3(1.0f, 1.0f, 1.0f));

	pMisobon->m_nType = nType;		// 種類設定

	return pMisobon;
}

//*******************************************************************************************************************************************
// 移動処理
//*******************************************************************************************************************************************
void CMisobon::Move()
{
	// 現在の位置の取得
	D3DXVECTOR3 CurrentPos = GetPos();

	switch (m_nType)
	{
	case 0:
		if (m_bMoveHorizon)
		{
			CurrentPos.x -= 0.3f;
		}
		else if (!m_bMoveHorizon)
		{
			CurrentPos.x += 0.3f;
		}

		if (CurrentPos.x <= -205.0f)
		{
			m_bMoveHorizon = false;
		}
		else if (CurrentPos.x >= 205.0f)
		{
			m_bMoveHorizon = true;
		}
		break;
	case 1:
		if (m_bMoveVertical)
		{
			CurrentPos.z -= 0.3f;
		}
		else if (!m_bMoveVertical)
		{
			CurrentPos.z += 0.3f;
		}
		break;
	}

	SetPos(CurrentPos);
}

//*******************************************************************************************************************************************
// 攻撃処理
//*******************************************************************************************************************************************
void CMisobon::Attack()
{

}
