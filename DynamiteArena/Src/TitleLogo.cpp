//*******************************************************************************************************************************************
//
// ダイナマイトアリーナ(scene.cpp)
// Author : Kasai Keisuke
//
//*******************************************************************************************************************************************

// include
#include "TitleLogo.h"

//*******************************************************************************************************************************************
// コンストラクタ
//*******************************************************************************************************************************************
CTitleLogo::CTitleLogo(int nPriority):CObject2D(nPriority)
{
	m_pTexture = nullptr;		// テクスチャのポインタ
	m_bAnimation = false;		// アニメーション用フラグ(trueの時にα値を上げる)
}

//*******************************************************************************************************************************************
// デストラクタ
//*******************************************************************************************************************************************
CTitleLogo::~CTitleLogo()
{
	m_pTexture = nullptr;		 // テクスチャのポインタ
	m_bAnimation = false;		// アニメーション用フラグ(trueの時にα値を上げる)
}

//*******************************************************************************************************************************************
// 初期化処理
//*******************************************************************************************************************************************
HRESULT CTitleLogo::Init()
{
	// 2Dオブジェクトの初期化処理
	CObject2D::Init();

	return S_OK;
}

//*******************************************************************************************************************************************
// 終了処理
//*******************************************************************************************************************************************
void CTitleLogo::Uninit()
{
	// 2Dオブジェクトの終了処理
	CObject2D::Uninit();

	Release();
}

//*******************************************************************************************************************************************
// 更新処理
//*******************************************************************************************************************************************
void CTitleLogo::Update()
{
	// 2Dオブジェクトの更新処理
	CObject2D::Update();

	// アニメーション処理
	Animation();
}

//*******************************************************************************************************************************************
// 描画処理
//*******************************************************************************************************************************************
void CTitleLogo::Draw()
{
	// 2Dオブジェクトの描画処理
	CObject2D::Draw();
}

//*******************************************************************************************************************************************
// 生成処理
//*******************************************************************************************************************************************
CTitleLogo* CTitleLogo::Create(D3DXVECTOR3 pos, float fWidth, float fHeight)
{
	// シングルトンインスタンスの取得
	CManager& manager = CManager::GetInstance();

	CTitleLogo* pTitleLogo = new CTitleLogo();

	pTitleLogo->Init();		// 初期化処理

	pTitleLogo->SetObject2D(pos, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), fWidth, fHeight);

	// テクスチャの読み込み
	D3DXCreateTextureFromFile(manager.GetRenderer()->GetDevice(), "data\\TEXTURE\\TitleLogo000.png", &pTitleLogo->m_pTexture);

	pTitleLogo->BindTexture(pTitleLogo->m_pTexture);	// テクスチャ設定

	return pTitleLogo;
}

//*******************************************************************************************************************************************
// アニメーション処理
//*******************************************************************************************************************************************
void CTitleLogo::Animation()
{
	D3DXCOLOR CurrentColor = GetColor();

	if (CurrentColor.a <= MIN_COLOR)
	{
		m_bAnimation = true;
	}
	if (CurrentColor.a >= 1.0f)
	{
		m_bAnimation = false;
	}

	if (m_bAnimation)
	{
		CurrentColor.a += ANIM_SPEED;
	}
	else if (!m_bAnimation)
	{
		CurrentColor.a -= ANIM_SPEED;
	}

	SetColor(CurrentColor);
}
