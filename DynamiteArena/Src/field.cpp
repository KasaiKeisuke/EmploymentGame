//*******************************************************************************************************************************************
//
// ダイナマイトアリーナ(field.cpp)
// Author : Kasai Keisuke
//
//*******************************************************************************************************************************************

// include
#include "field.h"
#include "manager.h"

// 静的メンバ変数初期化
LPDIRECT3DTEXTURE9 CField::m_pTextureTemp = nullptr;

//*******************************************************************************************************************************************
// コンストラクタ
//*******************************************************************************************************************************************
CField::CField(int nPriority):CObject3D(nPriority)
{

}

//*******************************************************************************************************************************************
// デストラクタ
//*******************************************************************************************************************************************
CField::~CField()
{

}

//*******************************************************************************************************************************************
// 初期化処理
//*******************************************************************************************************************************************
HRESULT CField::Init()
{
	// 3Dオブジェクトの初期化処理
	CObject3D::Init();

	return S_OK;
}

//*******************************************************************************************************************************************
// 終了処理
//*******************************************************************************************************************************************
void CField::Uninit()
{
	// 3Dオブジェクトの終了処理
	CObject3D::Uninit();

}

//*******************************************************************************************************************************************
// 更新処理
//*******************************************************************************************************************************************
void CField::Update()
{
	// 3Dオブジェクトの更新処理
	CObject3D::Update();
}

//*******************************************************************************************************************************************
// 描画処理
//*******************************************************************************************************************************************
void CField::Draw()
{
	// 3Dオブジェクトの描画処理
	CObject3D::Draw();
}

//*******************************************************************************************************************************************
// 生成処理
//*******************************************************************************************************************************************
CField* CField::Create(D3DXVECTOR3 pos, float fWidth, float fHeight, float fDepth)
{
	CField* pField = new CField();

	pField->Init();	

	pField->SetObject3D(pos, fWidth, fHeight, fDepth);

	if (m_pTextureTemp != nullptr)
	{
		pField->BindTexture(m_pTextureTemp);
	}
	return nullptr;
}

//*******************************************************************************************************************************************
// テクスチャロード
//*******************************************************************************************************************************************
HRESULT CField::Load()
{
	// シングルトンインスタンスの取得
	CManager& manager = CManager::GetInstance();

	if (m_pTextureTemp == nullptr)
	{
		// テクスチャの読み込み
		D3DXCreateTextureFromFile(manager.GetRenderer()->GetDevice(), "data\\TEXTURE\\field001.jpg", &m_pTextureTemp);
	}

	return S_OK;
}

//*******************************************************************************************************************************************
// テクスチャアンロード
//*******************************************************************************************************************************************
void CField::UnLoad()
{
	if (m_pTextureTemp != nullptr)
	{
		m_pTextureTemp->Release();

		m_pTextureTemp = nullptr;
	}
}
